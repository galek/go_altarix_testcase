package main

import (
	// "fmt"
	// "strconv"

	"github.com/go-pg/pg"
	
)


var DB *pg.DB

/**/
type User struct {
	Id     int64
	Name   string
	Emails []string
 }
 type Story struct {
	Id       int64
	Title    string
	AuthorId int64
	Author   *User
 }

func createSchema(db *pg.DB) error {
	for _, model := range []interface{}{&User{}, &Story{}} {
	   err := db.CreateTable(model, nil)
	   if err != nil {
		  return err
	   }
	}
	return nil
 }

/**/
func connectionToDB() {
	
	println("connection to DB");


	DB = pg.Connect(&pg.Options{
		User: "postgres",
		Password: "postgres",
		Database: "altarix"})

		if err != nil {
			println(err.Error())
		}

		err := createSchema(DB)
		if err != nil {
		   panic(err)
		}

		user1 := &User{
			Name:   "admin",
			Emails: []string{"admin1@admin", "admin2@admin"},
		 }
		 err = DB.Insert(user1)
		 if err != nil {
			panic(err)
		 }
	  
		 err = DB.Insert(&User{
			Name:   "root",
			Emails: []string{"root1@root", "root2@root"},
		 })
		 if err != nil {
			panic(err)
		 }

}

func CloseConnectionToDB() {
	defer DB.Close();
}